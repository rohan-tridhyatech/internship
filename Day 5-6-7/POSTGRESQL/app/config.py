from __future__ import annotations

from sqlmodel import create_engine
from starlette.config import Config

# Initialize Config to read environment variables from a .env file
# If .env file is not found, default config is used (empty config)
try:
    config = Config(".env")
except FileNotFoundError:
    config = Config()

# Fetch DATABASE_URL from the .env file or environment variables
DATABASE_URL = config("DATABASE_URL", cast=str)

# Adjust the connection string format for SQLAlchemy (replace 'postgresql' with 'postgresql+psycopg2')
# This is necessary for SQLAlchemy to work with the psycopg2 driver for PostgreSQL
conn_string: str = DATABASE_URL.replace("postgresql", "postgresql+psycopg2")

# Create the database engine using the connection string
# The `echo=True` will log all SQL queries generated by SQLAlchemy (useful for debugging)
engine = create_engine(conn_string, echo=True)
